# -*- coding: utf-8 -*-
#
# LoL lolkingCounter is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# lolkingCounter is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with LoL lolkingCounter. If not, see <http://www.gnu.org/licenses/>.


#BeautifulSoup import
from bs4 import BeautifulSoup

#urllib2 import
from urllib2 import urlopen


#VARS
base_url = 'http://lolking.net'
champ_url = 'http://www.lolking.net/guides/list.php?champion=%s&sort=%s&page=%i'
sort_att = ('rating', 'views', 'date_modified', 'date_created', 'lolking_score')


class lolkingCounter():

    def __init__(self, champ, sort='rating'):
        if sort in sort_att:
            self.__get_guides_with_matchups(champ, sort)
        else:
            raise('sort attribute is invalid')

    def __get_html(self, url):
        try:
            html = urlopen(url).read()
            return html
        except:
            pass

    def __exist_page_number(self, url):
        html = self.__get_html(url)

        soup = BeautifulSoup(html).find(id="container_inner")
        text = soup.findAll('div', recursive=False)[3].find('div').findAll('div', recursive=False)[1].findAll('div', recursive=False)[1].text.strip()

        if 'Aww snap...' not in text:
            return True
        else:
            return False

    def __get_page_list(self, champ, sort):
        x = 1
        list_page_urls = []
        while True:
            guide_list_page = champ_url % (champ, sort, x)

            if self.__exist_page_number(guide_list_page):
                list_page_urls.append(guide_list_page)
                x += 1
            else:
                x -= 1
                break

        return list_page_urls

    def __get_guides_urls(self, champ, sort):
        list_guides_urls = []

        for url in self.__get_page_list(champ, sort):
            html = self.__get_html(url)
            soup = BeautifulSoup(html).find(id="container_inner")
            guides = soup.findAll('div',recursive=False)[3].find('div').findAll('div', recursive=False)[1].findAll('div', recursive=False)[2].findAll('div', recursive=False)

            for guide in guides:
                guide_url = guide.findAll('div', recursive=False)[2].findAll('div', recursive=False)[0].findAll('div', recursive=False)[0].find('a')['href']
                list_guides_urls.append(base_url + guide_url)

        return list_guides_urls

    def __ignore_guides_without_matchups(self, url):
        html = self.__get_html(url)
        soup = BeautifulSoup(html).find(id='matchups-container').find('table')
        #The content of the table is generated by JavaScript.
        #Unable to get the content.

        if soup.find('tbody'):
            return True
        else:
            return False

    def __get_guides_with_matchups(self, champ, sort):
        list_guides_urls = []
        guides = self.__get_guides_urls(champ, sort)

        for guide in guides:
            if self.__ignore_guides_without_matchups(guide):
                list_guides_urls.append(guide)

        return list_guides_urls

#TESTING
champ = lolkingCounter('kayle')
